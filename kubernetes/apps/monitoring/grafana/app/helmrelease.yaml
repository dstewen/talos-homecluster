---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 9.2.7
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: openebs
      namespace: openebs-system
  values:
    revisionHistoryLimit: 3
#    affinity:
#      nodeAffinity:
#        requiredDuringSchedulingIgnoredDuringExecution:
#          nodeSelectorTerms:
#          - matchExpressions:
#            - key: node-role.kubernetes.io/worker
#              operator: In
#              values:
#              - worker
#        preferredDuringSchedulingIgnoredDuringExecution:
#        - weight: 1
#          preference:
#            matchExpressions:
#            - key: kubernetes.io/arch
#              operator: In
#              values:
#              - arm64
    deploymentStrategy:
      type: Recreate
    admin:
#      existingSecret: grafana-admin-secret
      existingSecret: grafana-secret
      passwordKey: adminPass
      userKey: adminUser
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        signout_redirect_url: https://id.${SECRET_DOMAIN}/application/o/grafana-provider/end-session/
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Viewer
        hide_version: true
      auth.generic_oauth:
        name: authentik
        enabled: true
#        client_id: # Set by env vars secret
#        client_secret: # Set by env vars secret
        scopes: openid email profile
        auth_url: https://id.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://id.${SECRET_DOMAIN}/application/o/token/
        api_url: https://id.${SECRET_DOMAIN}/application/o/userinfo/
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default-folder
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph-folder
          - name: cilium
            orgId: 1
            folder: Cilium
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium-folder
          - name: etcd
            orgId: 1
            folder: Etcd
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/etcd-folder
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux-folder
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes-folder
          - name: loki
            orgId: 1
            folder: Loki
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki-folder
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network-folder
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx-folder
          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/prometheus-folder
          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/system-folder
          - name: testing
            orgId: 1
            folder: Testing
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/testing-folder
          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos-folder
          - name: trivy
            orgId: 1
            folder: Trivy
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/trivy-folder
          - name: unifi
            orgId: 1
            folder: Unifi
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi-folder
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.monitoring.svc.cluster.local:3100
            jsonData:
              maxLines: 250
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            jsonData:
              prometheusType: Thanos
              timeInterval: 1m
            isDefault: true
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        cloudnative-pg:
          # renovate: depName="CloudNativePG Dashboard"
          gnetId: 20417
          revision: 4
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502-minio-dashboard/
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 41
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/763-redis-dashboard-for-prometheus-redis-exporter-1-x/
        redis:
          # renovate: depName="Redis Dashboard for Prometheus Redis Exporter 1.x"
          gnetId: 763
          revision: 6
          datasource: Prometheus
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
      ceph:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        host-overview:
          url: https://raw.githubusercontent.com/ceph/ceph/main/monitoring/ceph-mixin/dashboards_out/hosts-overview.json
          datasource: Prometheus
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/1.14.1/install/kubernetes/cilium/files/cilium-agent/dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/1.14.1/install/kubernetes/cilium/files/cilium-operator/dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/1.14.1/install/kubernetes/cilium/files/hubble/dashboards/hubble-dashboard.json
          datasource: Prometheus
      etcd:
        etcd-cluster-overview:
          # renovate: depName="Etcd Cluster Overview"
          gnetId: 15308
          revision: 1
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
        flux2:
          # renovate: depName="Flux2"
          gnetId: 16714
          revision: 1
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        node-exporter-full-2:
          # renovate: depName="Node Exporter Full v2"
          gnetId: 12486
          revision: 2
          datasource: Prometheus
        k3s-cluster-monitoring:
          # renovate: depName="k3s Cluster Monitoring"
          gnetId: 15282
          revision: 1
          datasource: Prometheus
        kube-cluster-prometheus:
          # renovate: depName="Kube Cluster Prometheus"
          gnetId: 6417
          revision: 1
          datasource: Prometheus
        kube-state-metrics-v2:
          # renovate: depName="Kube State Metrics v2"
          gnetId: 13332
          revision: 12
          datasource: Prometheus
        kube-storage-usage:
          # renovate: depName="Kube Storage Usage"
          gnetId: 20066
          revision: 2
          datasource: Prometheus
        kube-events-dashboard:
          # renovate: depName="Kube Events"
          gnetId: 20018
          revision: 1
          datasource: Loki
        k8s-dashboard-en-20250125:
          # renovate: depName="K8S Dashboard EN 20250125"
          gnetId: 15661
          revision: 2
          datasource:
            - { name: DS__VICTORIAMETRICS-PROD-ALL, value: Prometheus }
        kube-autoscaling-hpa:
          # renovate: depName="Kubernetes / Autoscaling / Horizontal Pod Autoscaler"
          gnetId: 22251
          revision: 1
          datasource: Prometheus
        kube-autoscaling-pdb:
          # renovate: depName="Kubernetes / Autoscaling / Pod Disruption Budget"
          gnetId: 22170
          revision: 3
          datasource: Prometheus
        kube-autoscaling-vpa:
          # renovate: depName="Kubernetes / Autoscaling / Vertical Pod Autoscaler"
          gnetId: 22168
          revision: 3
          datasource: Prometheus
        kube-overview:
          # renovate: depName="Kubernetes / Overview"
          gnetId: 21410
          revision: 7
          datasource: Prometheus
        kube-views-node-list:
          # renovate: depName="Kubernetes / Views / Nodes List"
          gnetId: 22153
          revision: 3
          datasource: Prometheus
      loki:
        loki-chunks:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-chunks.json
          datasource: Prometheus
        loki-deletion:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-deletion.json
          datasource: Prometheus
        loki-kubernetes-logs:
          gnetId: 15141
          revision: 1
          datasource: Loki
        kubernetes-logs:
          # renovate: depName="Kubernetes Logs"
          gnetId: 16976
          revision: 1
          datasource: Loki
        kubernetes-logs-from-loki:
          # renovate: depName="Kubernetes Logs from Loki"
          gnetId: 18494
          revision: 1
          datasource: Loki
        loki-logs:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-logs.json
          datasource: Prometheus
        loki-mixin-recording-rules:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-mixin-recording-rules.json
          datasource: Prometheus
        loki-operational:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-operational.json
          datasource: Prometheus
        loki-reads-resources:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-reads-resources.json
          datasource: Prometheus
        loki-reads:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-reads.json
          datasource: Prometheus
        loki-retention:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-retention.json
          datasource: Prometheus
        loki-writes-resources:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-writes-resources.json
          datasource: Prometheus
        loki-writes:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/loki/dashboards/loki-writes.json
          datasource: Prometheus
        logs-app:
          # renovate: depName="Loki / Logs / App"
          gnetId: 13639
          revision: 2
          datasource: Loki
        logs-app-multi-cluster:
          # renovate: depName="K8s App Logs / Multi Clusters"
          gnetId: 13639
          revision: 3
          datasource: Loki
        logging-dashboard-via-loki:
          # renovate: depName="Logging Dashboard via Loki"
          gnetId: 12611
          revision: 2
          datasource:
            - { type: loki, uid: loki }
        loki-stack-monitoring:
          # renovate: depName="Loki Stack Monitoring"
          gnetId: 14055
          revision: 5
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: DS_LOKI, value: Loki }
        promtail26x:
          # renovate: depName="Promtail26x"
          gnetId: 16708
          revision: 1
          datasource: Prometheus
        loki-and-promtail:
          # renovate: depName="Loki and Promtail"
          gnetId: 10880
          revision: 1
          datasource: Prometheus
        loki-namespacelogs:
          # renovate: depName="Loki Logs by Namespace"
          gnetId: 19566
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: DS_LOKI, value: Loki }
      network:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        snmp-device:
          # renovate: depName="SNMP device"
          gnetId: 20347
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        snmp-device-summary:
          # renovate: depName="SNMP Device Summary"
          gnetId: 12489
          revision: 5
          datasource: Prometheus
        snmp-exporter-internal-stats:
          # renovate: depName="SNMP Exporter Internal Stats"
          gnetId: 12197
          revision: 1
          datasource: Prometheus
        snmp-stats:
          # renovate: depName="SNMP Stats ifmib"
          gnetId: 11169
          revision: 1
          datasource: Prometheus
        snmp-interface-detail:
          # renovate: depName="SNMP Interface Detail"
          gnetId: 12492
          revision: 4
          datasource: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        speedtest-exporter-dashboard:
          # renovate: depName="Speedtest Exporter"
          gnetId: 13665
          revision: 4
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        synology-nas-overview:
          # renovate: depName="Synology NAS Overview"
          gnetId: 14364
          revision: 10
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        synology-nas-details:
          # renovate: depName="Synology NAS Details"
          gnetId: 14284
          revision: 10
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        nginx-ingress-controller:
          # renovate: depName="Nginx Ingress Controller"
          gnetId: 10187
          revision: 1
          datasource: Prometheus
      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
        prometheus-metrics-management:
          # renovate: depName="Prometheus Metrics Management"
          gnetId: 19341
          revision: 4
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      system:
        authentik:
          # renovate: depName="Authentik"
          gnetId: 14837
          revision: 2
          datasource: Prometheus
        cnpg-dashboard:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/v1.21.0/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        dragonfly-dashboard:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/main/monitoring/grafana-dashboard.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        grafana-internals:
          # renovate: depName="Grafana Internals"
          gnetId: 3590
          revision: 3
          datasource: Prometheus
        k3s-rook-global-overview:
          # renovate: depName="K3S with Rook Global Overview"
          gnetId: 20807
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        k8s-pod-metrics:
          # renovate: depName="K8S Pod Metrics"
          gnetId: 21548
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        prometheus-metrics-for-external-secrets:
          # renovate: depName="Prometheus metrics for External Secrets"
          gnetId: 21640
          revision: 4
          datasource:
            - { name: DS_METRICS, value: Prometheus }
        promtail-monitoring-metrics-logs:
          # renovate: depName="Promtail Monitoring - Metrics and Logs"
          gnetId: 20881
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: DS_LOKI, value: Loki }
        proxmox-via-prometheus:
          # renovate: depName="Proxmox via Prometheus"
          gnetId: 20881
          revision: 5
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        qbittorrent:
          # renovate: depName="qBittorrent Dashboard"
          gnetId: 23341
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        redis:
          # renovate: depName="Redis"
          gnetId: 11835
          revision: 1
          datasource: Prometheus
        smart:
          # renovate: depName="Dashboard for smartctl_exporter"
          gnetId: 20204
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        smartctl:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        volsync:
          # renovate: depName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
      testing:
        arc-autoscaling-runner-set-monitoring:
          url: https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/gha-runner-scale-set-controller/samples/grafana-dashboard/ARC-Autoscaling-Runner-Set-Monitoring_1692627561838.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        ceph-fs:
          # renovate: depName="Ceph - CephFS Dashboard"
          gnetId: 9340
          revision: 1
          datasource:
            - { name: DS_CEPH-PROMETHEUS, value: Prometheus }
        ceph-fs-mds:
          # renovate: depName="Ceph - CephFS MDS Dashboard"
          gnetId: 12701
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        ceph-usage:
          # renovate: depName="Ceph - Usage Dashboard"
          gnetId: 23246
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        frigate-dashboard:
          # renovate: depName="Frigate Dashboard"
          gnetId: 18226
          revision: 9
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        minecraft-server-stats-updated:
          # renovate: depName="Minecraft Server Stats - Updated"
          gnetId: 21835
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-cpu-system:
          # renovate: depName="Node / CPU and System"
          gnetId: 22275
          revision: 1
          datasource: Prometheus
        node-exporter-bsd:
          # renovate: depName="Node-Exporter BSD"
          gnetId: 4260
          revision: 15
          datasource: Prometheus
        node-fleet-overview:
          # renovate: depName="Node / Fleet Overview"
          gnetId: 22269
          revision: 1
          datasource: Prometheus
        node-information:
          # renovate: depName="Node Information"
          gnetId: 22403
          revision: 12
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-network:
          # renovate: depName="Node / Network"
          gnetId: 22273
          revision: 1
          datasource: Prometheus
        node-overview:
          # renovate: depName="Node / Overview"
          gnetId: 22272
          revision: 1
          datasource: Prometheus
        node-status:
          # renovate: depName="Node Status"
          gnetId: 22820
          revision: 1
          datasource:
            - { name: DS_VICTORIA, value: Prometheus }
        node-temperature:
          # renovate: depName="Node Exporter / Node Temperatures"
          gnetId: 15202
          revision: 1
          datasource: Prometheus
        opnsense-exporter:
          # renovate: depName="Opnsense-Exporter"
          gnetId: 21113
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS-K0, value: Prometheus }
        opnsense:
          # renovate: depName="Opnsense Dashboard"
          gnetId: 19366
          revision: 5
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        opnsense-firewall:
          # renovate: depName="Opnsense Firewall"
          gnetId: 9291
          revision: 1
          datasource: Prometheus
        opnsense-basic-metrics:
          # renovate: depName="Opnsense Basic Metrics"
          gnetId: 22248
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        opnsense-metrics:
          # renovate: depName="Opnsense Metrics"
          gnetId: 18957
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
      trivy:
        trivy-image-vulnerability-overview:
          # renovate: depName="Trivy Image Vulnerability Overview"
          gnetId: 16742
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        trivy-operator-image-vulnerability:
          # renovate: depName="Trivy Operator / Image Vulnerability"
          gnetId: 17214
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        trivy-operator-vulnerabilities:
          # renovate: depName="Trivy Operator - Vulnerabilities"
          gnetId: 16337
          revision: 14
          datasource: Prometheus
        trivy-operator-dashboard:
          # renovate: depName="Trivy Operator Dashboard"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        trivy-operator-dashboard2:
          # renovate: depName="Trivy Operator Dashboard2"
          gnetId: 17813
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        trivy-operator-dashboard3:
          # renovate: depName="Trivy Operator Dashboard3"
          gnetId: 21398
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        trivy-operator-reports:
          # renovate: depName="Trivy Operator Reports"
          gnetId: 16652
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      unifi:
        unifi-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-usw:
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
      - cloudflare-app
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/icon: grafana.png
        gethomepage.dev/name: Grafana
        gethomepage.dev/group: Monitoring
#        gethomepage.dev/widget.type: grafana
#        gethomepage.dev/widget.url: http://grafana.monitoring.svc.cluster.local
#        gethomepage.dev/widget.username: ${HOMEPAGE_VAR_GRAFANA_USERNAME}
#        gethomepage.dev/widget.password: ${HOMEPAGE_VAR_GRAFANA_PASSWORD}
        external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
#      storageClassName: local-hostpath
    testFramework:
      enabled: false
