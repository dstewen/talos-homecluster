---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
    controllers:
      pgadmin:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
#          secret.reloader.stakater.com/reload: authelia-secret
        pod:
          securityContext:
            runAsUser: 5050
            runAsGroup: 5050
            fsGroup: 5050
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 9.9@sha256:5d9624a93634d1c5e595619cc57b1d330758120d1baf445fa97300c0c1fc3c0a
            env:
              PGADMIN_DISABLE_POSTFIX: "true"
              PGADMIN_LISTEN_PORT: &httpPort 80

            envFrom:
              - secretRef:
                  name: pgadmin-secret
            resources:
              requests:
                cpu: 15m
                memory: 100M
              limits:
                memory: 500M
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: *httpPort
                  failureThreshold: 10
              readiness: *probes
              startup: *probes
    service:
      app:
        controller: *app
        ports:
          http:
            port: *httpPort

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *httpPort

    persistence:
      config:
#        existingClaim: "${VOLSYNC_CLAIM}"
        existingClaim: pgadmin-config-v1
        globalMounts:
          - path: /var/lib/pgadmin
#      server-json:
#        enabled: true
#        type: configMap
#        name: servers-json
#        globalMounts:
#          - path: /pgadmin4/servers.json
#            subPath: servers.json
