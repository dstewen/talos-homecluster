---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16-test
  namespace: database
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
#  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-6
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.2-v0.2.1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
# Note: Bootstrap is needed when recovering from an existing cnpg cluster
#  bootstrap:
#    recovery:
#      source: &previousCluster postgres-v3
  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
    shared_preload_libraries:
      - "vectors.so"
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      data:
        compression: bzip2
      destinationPath: s3://cnpg-backups-new/
      endpointURL: http://192.168.10.198:9000
      serverName: &currentCluster postgres16-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  bootstrap:
    initdb:
      postInitSQL:
        - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
# Note: externalClusters is needed when recovering from an existing cnpg cluster
#  externalClusters:
#    - name: *previousCluster
#      barmanObjectStore:
#        wal:
#          compression: bzip2
#          maxParallel: 8
#        destinationPath: s3://cnpg-zd6qkutg/
#        endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
#        s3Credentials:
#          accessKeyId:
#            name: cloudnative-pg-secret
#            key: aws-access-key-id
#          secretAccessKey:
#            name: cloudnative-pg-secret
#            key: aws-secret-access-key
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - arm64
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 50
        preference:
          matchExpressions:
          - key: node-role.kubernetes.io/worker
            operator: In
            values:
            - worker
