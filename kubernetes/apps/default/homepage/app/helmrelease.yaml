---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
    controllers:
      homepage:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.4.0
            env:
              TZ: ${TIMEZONE}
              HOMEPAGE_ALLOWED_HOSTS: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            envFrom:
              - secretRef:
                  name: homepage-secret
            resources:
              requests:
                cpu: 15m
                memory: 200M
              limits:
                memory: 500Mi

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 3000

#    ingress:
#      app:
#        enabled: true
#        className: internal
#        annotations:
#          hajimari.io/enable: "false"
#          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
#        hosts:
#          - host: &host "homepage.${SECRET_DOMAIN}"
#            paths:
#              - path: /
#                pathType: Prefix
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - hosts:
#              - *host

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config:
        enabled: true
        type: configMap
        name: homepage-config
        globalMounts:
          - subPath: bookmarks.yaml
            path: /app/config/bookmarks.yaml
          - subPath: docker.yaml
            path: /app/config/docker.yaml
          - subPath: kubernetes.yaml
            path: /app/config/kubernetes.yaml
          - subPath: services.yaml
            path: /app/config/services.yaml
          - subPath: settings.yaml
            path: /app/config/settings.yaml
          - subPath: widgets.yaml
            path: /app/config/widgets.yaml

    serviceAccount:
      homepage:
        enabled: true
