---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret
              - secretRef:
                  name: cluster-secrets
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.0.5@sha256:47cede4c9e57c53af75b8b6e1382576ede241b9d847733ba449d723ca8cb51c8
            env:
              TZ: ${TIMEZONE}
              PROWLARR__APP__THEME: dark
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__LEVEL: info
              PROWLARR__SERVER__PORT: &port 9696
              PROWLARR__UPDATE__BRANCH: develop
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 384Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
    service:
      app:
        controller: prowlarr
        ports:
          http:
            port: *port
#    ingress:
#      app:
#        enabled: true
#        className: internal
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Downloads
#          gethomepage.dev/name: Prowlarr
#          gethomepage.dev/icon: prowlarr.png
#          gethomepage.dev/widget.type: prowlarr
#          gethomepage.dev/widget.url: http://prowlarr.media.svc.cluster.local:9696
#          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PROWLARR_TOKEN}}` }}"
##          nginx.ingress.kubernetes.io/configuration-snippet: |
##            proxy_set_header Accept-Encoding "";
##            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/prowlarr/nord.css"></head>';
##            sub_filter_once on;
#        hosts:
#          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
#            paths:
#              - path: /
#                pathType: Prefix
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - hosts:
#              - *host

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Prowlarr
          gethomepage.dev/icon: prowlarr.png
          gethomepage.dev/widget.type: prowlarr
          gethomepage.dev/widget.url: http://prowlarr.media.svc.cluster.local:9696
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PROWLARR_TOKEN}}` }}"
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config:
        existingClaim: prowlarr
      tmp:
        type: emptyDir
