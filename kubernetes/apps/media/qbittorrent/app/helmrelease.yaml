---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.1.2@sha256:31ac39705e31f7cdcc04dc46c1c0b0cdf8dc6f9865d4894efc097a33adc41524
            env:
              TZ: ${TIMEZONE}
              QBT_WEBUI_PORT: &port 80
              QBT_TORRENTING_PORT: &torrentPort 50413
#              CROSS_SEED_ENABLED: false
#              CROSS_SEED_HOST: cross-seed.default.svc.cluster.local
#              CROSS_SEED_PORT: 80
#              CROSS_SEED_SLEEP_INTERVAL: 0
#              PUSHOVER_ENABLED: false
#            envFrom:
#              - secretRef:
#                  name: qbittorrent-secret
            envFrom:
              - secretRef:
                  name: cluster-secrets
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
#      nodeSelector:
#        topology.kubernetes.io/zone: w
#      affinity:
#        podAntiAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#              podAffinityTerm:
#                labelSelector:
#                  matchExpressions:
#                    - key: app.kubernetes.io/name
#                      operator: In
#                      values: ["sabnzbd"]
#                topologyKey: kubernetes.io/hostname

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      terminationGracePeriodSeconds: 300

    service:
      app:
        controller: qbittorrent
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_QBITTORENT_ADDR}
        ports:
          http:
            port: *port
          bittorrent:
            enabled: true
            port: *torrentPort
            protocol: TCP
#    ingress:
#      app:
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Downloads
#          gethomepage.dev/name: qBittorrent
#          gethomepage.dev/icon: qbittorrent.png
#          gethomepage.dev/widget.type: qbittorrent
#          gethomepage.dev/widget.url: http://qbittorrent.media
#          gethomepage.dev/widget.user: "{{`{{HOMEPAGE_VAR_QBITTORRENT_USER}}`}}"
#          gethomepage.dev/widget.password: "{{`{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}`}}"
#          external-dns.alpha.kubernetes.io/target: internal.davidstewen.com
#        className: internal
#        hosts:
#          - host: qb.davidstewen.com
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: http://qbittorrent.media
          gethomepage.dev/widget.user: "{{`{{HOMEPAGE_VAR_QBITTORRENT_USER}}`}}"
          gethomepage.dev/widget.password: "{{`{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}`}}"
        hostnames: ["qb.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config:
        existingClaim: qbittorrent-config
      tmp:
        type: emptyDir
      scripts:
        type: configMap
        name: qbittorrent-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      media:
        enabled: true
        type: nfs
        server: ${NAS_IP}
        path: /volume2/piNFS01/flux-cluster/media_new/torrents
        globalMounts:
          - path: /torrents
