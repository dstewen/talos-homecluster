---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.2@sha256:dbc87e5ce9e199709188e152e82b3ff5d33e6521a1b3d61e465aa75b4b739e7f
            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: bazarr-secret
              - secretRef:
                  name: cluster-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - worker
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
#    ingress:
#      app:
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Downloads
#          gethomepage.dev/name: Bazarr
#          gethomepage.dev/icon: bazarr.png
#          gethomepage.dev/widget.type: bazarr
#          gethomepage.dev/widget.url: http://bazarr.media
#          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_BAZARR_TOKEN}}`}}"
#          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
#        className: internal
#        hosts:
#          - host: bazarr.${SECRET_DOMAIN}
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http

    route:
      app:
        hostnames: ["bazarr.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config:
        existingClaim: bazarr

      media:
        type: nfs
        server: 192.168.10.15
        path: /volume2/piNFS01/flux-cluster/media_new
        globalMounts:
          - path: /media

      tmpfs:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /config/cache
                subPath: cache
              - path: /config/log
                subPath: log
              - path: /tmp
                subPath: tmp
