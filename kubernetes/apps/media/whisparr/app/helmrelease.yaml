---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: whisparr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/whisparr
              tag: 2.0.0.1112@sha256:03dc55e2450ba96253a1624380ac0468c052c1756f2faffe98e22a9fb0edbdf2
            env:
              WHISPARR__APP__INSTANCENAME: Whisparr
              WHISPARR__APP__THEME: dark
              WHISPARR__AUTH__METHOD: External
              WHISPARR__AUTH__REQUIRED: DisabledForLocalAddresses
              WHISPARR__LOG__DBENABLED: "False"
              WHISPARR__LOG__LEVEL: info
              WHISPARR__PORT: &port 6969
              WHISPARR__UPDATE__BRANCH: develop
              TZ: Australia/Melbourne
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: node-role.kubernetes.io/worker
#                operator: In
#                values:
#                - worker
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 1
#            preference:
#              matchExpressions:
#              - key: kubernetes.io/arch
#                operator: In
#                values:
#                - arm64

    service:
      app:
        controller: whisparr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Adult Video
          gethomepage.dev/name: Whisparr
          gethomepage.dev/icon: whisparr.png
          gethomepage.dev/description: Whisparr Adult Content
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: whisparr
      scripts:
        type: configMap
        name: whisparr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.10.15
        path: /volume2/piNFS01/flux-cluster/media_new
        globalMounts:
          - path: /media
