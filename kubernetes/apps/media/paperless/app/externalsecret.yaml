---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &app paperless
  namespace: media
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: paperless-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # App
        PAPERLESS_ADMIN_USER: "{{ .PAPERLESS_ADMIN_USER }}"
        PAPERLESS_ADMIN_PASSWORD: "{{ .PAPERLESS_ADMIN_PASSWORD }}"
        PAPERLESS_SECRET_KEY: "{{ .PAPERLESS_SECRET_KEY }}"
        PAPERLESS_SOCIALACCOUNT_PROVIDERS: |-
          {
            "openid_connect": {
                "APPS": [
                    {
                        "provider_id": "authentik",
                        "name": "Authentik",
                        "client_id": "{{ .PAPERLESS_CLIENT_ID }}",
                        "secret": "{{ .PAPERLESS_CLIENT_SECRET }}",
                        "settings": {
                            "server_url": "https://id.${SECRET_DOMAIN}/application/o/paperless/.well-known/openid-configuration"
                        }
                    }
                ]
            }
          }
  dataFrom:
    - extract:
        key: paperless
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: paperless-dbinit
  namespace: media
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: paperless-dbinit-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        INIT_POSTGRES_DBNAME: paperless
        INIT_POSTGRES_HOST: postgres17-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .PAPERLESS_STORAGE_POSTGRES_USERNAME }}"
        INIT_POSTGRES_PASS: "{{ .PAPERLESS_STORAGE_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: cloudnative-pg
