---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
#  dependsOn:
#    - name: intel-device-plugin-gpu
#      namespace: kube-system
#    - name: local-path-provisioner
#      namespace: storage
#    - name: openebs
#      namespace: openebs-system
#    - name: volsync
#      namespace: volsync
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.davidstewen.com:443,http://10.200.15.224:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.10.0/24
            envFrom:
              - secretRef:
                  name: cluster-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000, 109] # Group 109 appears to be required for intel-gpu?
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
#        kubernetes.io/hostname: k3sworker1
    service:
      app:
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_PLEX_ADDR:=temp}
        ports:
          http:
            port: &port 32400
#    ingress:
#      app:
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Video
#          gethomepage.dev/name: Plex
#          gethomepage.dev/icon: plex.png
#          gethomepage.dev/description: "Plex Server Home Talos"
##          gethomepage.dev/widget.type: overseerr
##          gethomepage.dev/widget.url: http://overseerr.media:80
##          gethomepage.dev/widget.key: "MTczMDYwNTU2MzE1MzkzZGVlZWE3LTNkMTMtNDkzZi05ZTEzLWVhNmZkMGRmZmFlZA=="
#          external-dns.alpha.kubernetes.io/target: external.davidstewen.com
#          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#        className: external
#        hosts:
#          - host: "{{ .Release.Name }}.davidstewen.com"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
#          gethomepage.dev/pod-selector: >-
#            app.kubernetes.io/name in (plex)

        hostnames: ["plex.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      config:
        existingClaim: plex-config-0
        # TODO: If setting up Plex for the first time, you'll want to add the globalMounts section
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: ${NAS_IP:=temp}
        path: /volume2/piNFS01/flux-cluster/media_new/media
        globalMounts:
          - path: /media
            readOnly: false
