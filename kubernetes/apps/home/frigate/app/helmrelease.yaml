---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
#  dependsOn:
#    - name: intel-device-plugin-gpu
#      namespace: kube-system
#    - name: volsync
#      namespace: volsync
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: "0.15.1"
            env:
              TZ: Australia/Melbourne
              LIBVA_DRIVER_NAME: iHD
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 120
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: "1"
                memory: 4Gi
    defaultPodOptions:
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: app.kubernetes.io/name
#                    operator: In
#                    values: ["plex"]
#              topologyKey: kubernetes.io/hostname
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: kubernetes.io/hostname
#                operator: In
#                values:
#                - k3sworker1
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"
#        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: frigate
        annotations:
          lbipam.cilium.io/ips: ${SVC_FRIGATE_ADDR}
        type: LoadBalancer
        ports:
          http:
            port: *port
          go2rtc:
            port: 1984
          rtsp:
            port: 8554
          webrtc:
            port: 8555
            protocol: TCP
          webrtc-udp:
            port: 8555
            protocol: UDP
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Services
          gethomepage.dev/name: Frigate
          gethomepage.dev/icon: mdi-cctv
          gethomepage.dev/widget.type: frigate
          gethomepage.dev/widget.url: https://video.${SECRET_DOMAIN}
#          gethomepage.dev/siteMonitor: https://video.${SECRET_DOMAIN}
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
#          nginx.ingress.kubernetes.io/auth-method: GET
#          nginx.ingress.kubernetes.io/auth-url: "http://authelia.auth.svc.cluster.local/api/verify"
#          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_EXTERNAL_DOMAIN}/?rm=$request_method"
#          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
#          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "video.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: false
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      coral:
        type: hostPath
        hostPath: /dev/apex_0
        hostPathType: CharDevice
      media:
        type: nfs
        server: 192.168.10.15
        path: /volume2/piNFS01/flux-cluster/media/frigate
        globalMounts:
          - path: /media/frigate
